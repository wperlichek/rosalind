def transcribe_dna_to_rna(dna: str = "") -> str:
    # O(n^2) worst case, crude loop version, new str created every time
    if not dna:
        return dna
    else:
        rna = ""
        for ch in dna:
            rna += ch if ch != "T" else "U"
        return rna


def transcribe_dna_to_rna_alt(dna: str = ""):
    # O(n) implemented as highly optimized c code, more idiomatic, prefer this
    return dna.replace("T", "U") if dna else ""


print(
    transcribe_dna_to_rna(
        "TGGTCTTCTCTTCTGGTGTACAATCAGCTTATTGATTTGTAAATCTGACGGCGAAGACTTGTGAATCCGTTTTGCACCTTTTTCACCTCATCGTGGTTACCGAAAGTAACTATCTTCCATGATAGCTTCTCTATTTGTGCTGAGGCCGATTATTAGTAGATCGAAATCACCTAGTGCCTTGCAGGGGTTCTGCCGTGTGAGGATGTAACGACACTAGGTTGTCACTTGTATTATCTAAAATAGGTCGGTACTACGGTAAACCCTACTAGGTACAGTTACTGCGTGCTACAAGGTCCGCTCATTAGCTTTAAACTTAATCATTCTCACGAATCTTGAACGGATGTTGAACGTCTTCAGTGAGATGGCTAAGCCGCTTGACACGAAACGAGTACACCTAGAAGTAGTAAGGATGGGGAGGAGGCCCAATGTCATGCCGTCGCGCCGTACTCTGAACTCGAAGCACAACCCAGCACAAAAACGAGTGTGAAATTTGTGTAGCACGGGCTTTCTCCGGGTAAGGTGAACTTGCGCTGAATGTGGGGGTGATTTAAACCGCGAATGTGGATAGTGATCCGAACGGACGCGGTAGAAGTTACATGCGGTTTCTTGGTCTTTATAATAAATTCACAGGGGTCCCGTTCAGGGCTACTACTGAACTGCAGGATCGGAGCGCTCAGGGTGCCAATGTAATATGAGCGAAATCTGTCGGGTCCGTGTTACACTTCTTACGGTTCCCAATGCACCCCGACCAACTGGTTGACGACTAGGTCCGATGAGTGGCTGGTTGGAGACAGTCTCAGGCCCGCTGACTCGTCGTAAATAATCGGTGGCAGCCCACCTCGTTACTCGACGTTACTGCGATAGCGAGTGATCACCTTTAGTATAGTGGTTTCGTTCCGCGGGTATGTCCTGGCGCAGAAGAGATCAGGCACCGCAAAGTTTCTATACTCTGGAACACTGCGTTCCATCCAAGCACGCC"
    )
)

print(
    transcribe_dna_to_rna_alt(
        "TGGTCTTCTCTTCTGGTGTACAATCAGCTTATTGATTTGTAAATCTGACGGCGAAGACTTGTGAATCCGTTTTGCACCTTTTTCACCTCATCGTGGTTACCGAAAGTAACTATCTTCCATGATAGCTTCTCTATTTGTGCTGAGGCCGATTATTAGTAGATCGAAATCACCTAGTGCCTTGCAGGGGTTCTGCCGTGTGAGGATGTAACGACACTAGGTTGTCACTTGTATTATCTAAAATAGGTCGGTACTACGGTAAACCCTACTAGGTACAGTTACTGCGTGCTACAAGGTCCGCTCATTAGCTTTAAACTTAATCATTCTCACGAATCTTGAACGGATGTTGAACGTCTTCAGTGAGATGGCTAAGCCGCTTGACACGAAACGAGTACACCTAGAAGTAGTAAGGATGGGGAGGAGGCCCAATGTCATGCCGTCGCGCCGTACTCTGAACTCGAAGCACAACCCAGCACAAAAACGAGTGTGAAATTTGTGTAGCACGGGCTTTCTCCGGGTAAGGTGAACTTGCGCTGAATGTGGGGGTGATTTAAACCGCGAATGTGGATAGTGATCCGAACGGACGCGGTAGAAGTTACATGCGGTTTCTTGGTCTTTATAATAAATTCACAGGGGTCCCGTTCAGGGCTACTACTGAACTGCAGGATCGGAGCGCTCAGGGTGCCAATGTAATATGAGCGAAATCTGTCGGGTCCGTGTTACACTTCTTACGGTTCCCAATGCACCCCGACCAACTGGTTGACGACTAGGTCCGATGAGTGGCTGGTTGGAGACAGTCTCAGGCCCGCTGACTCGTCGTAAATAATCGGTGGCAGCCCACCTCGTTACTCGACGTTACTGCGATAGCGAGTGATCACCTTTAGTATAGTGGTTTCGTTCCGCGGGTATGTCCTGGCGCAGAAGAGATCAGGCACCGCAAAGTTTCTATACTCTGGAACACTGCGTTCCATCCAAGCACGCC"
    )
)
